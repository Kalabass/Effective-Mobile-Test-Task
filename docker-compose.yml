version: '3.8'

services:
  postgres:
    image: postgres:15
    container_name: postgres
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: effective_mobile
    ports:
      - '5433:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD', 'pg_isready', '-U', 'admin']
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 5s

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: admin
    ports:
      - '5672:5672'
      - '15672:15672'
    healthcheck:
      test: ['CMD', 'rabbitmq-diagnostics', 'ping']
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 5s

  history-service:
    build:
      context: ./first task/HistoryService
    container_name: history-service
    ports:
      - '3001:3001'
    depends_on:
      rabbitmq:
        condition: service_healthy
      postgres:
        condition: service_healthy
      stock-service:
        condition: service_started
    restart: on-failure

  stock-service:
    build:
      context: ./first task/StockService
    container_name: stock-service
    ports:
      - '3002:3002'
    depends_on:
      rabbitmq:
        condition: service_healthy
      postgres:
        condition: service_healthy
    restart: on-failure

  second-service:
    build:
      context: ./second
    container_name: second-service
    ports:
      - '3000:3000'
    depends_on:
      rabbitmq:
        condition: service_healthy
      postgres:
        condition: service_healthy
    restart: on-failure

volumes:
  postgres_data:
